import AVFoundation
import SwiftUI

struct VideoTestView: View {
    @StateObject private var videoManager = VideoPlayerManager.shared
    @State private var player: AVPlayer?
    @State private var isVideoReady: Bool = false
    @State private var errorMessage: String?
    @State private var useSimpleView: Bool = false

    var body: some View {
        VStack(spacing: 20) {
            Text("–¢–µ—Å—Ç –≤–∏–¥–µ–æ")
                .font(.title)
                .fontWeight(.bold)

            // –ü–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ä–∞–∑–Ω—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
            Toggle("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø—Ä–æ—Å—Ç–æ–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç", isOn: $useSimpleView)
                .padding()

            if let player = player, isVideoReady {
                if useSimpleView {
                    SimpleVideoView(player: player)
                        .frame(width: 300, height: 200)
                        .clipped()
                        .border(Color.green, width: 2)
                } else {
                    VideoBackgroundView(player: player)
                        .frame(width: 300, height: 200)
                        .clipped()
                        .border(Color.blue, width: 2)
                }
            } else {
                Rectangle()
                    .fill(Color.gray)
                    .frame(width: 300, height: 200)
                    .overlay(
                        VStack {
                            if isVideoReady {
                                Text("–í–∏–¥–µ–æ –≥–æ—Ç–æ–≤–æ!")
                                    .foregroundColor(.green)
                            } else {
                                ProgressView()
                                    .scaleEffect(1.5)
                                Text("–ó–∞–≥—Ä—É–∑–∫–∞ –≤–∏–¥–µ–æ...")
                                    .foregroundColor(.white)
                            }
                        }
                    )
            }

            if let errorMessage = errorMessage {
                Text(errorMessage)
                    .foregroundColor(.red)
                    .padding()
            }

            VStack(spacing: 10) {
                Button("–¢–µ—Å—Ç background.mp4") {
                    testVideo(resourceName: "background")
                }
                .buttonStyle(.borderedProminent)

                Button("–¢–µ—Å—Ç movie.mp4") {
                    testVideo(resourceName: "movie")
                }
                .buttonStyle(.borderedProminent)

                Button("–¢–µ—Å—Ç persons.mp4") {
                    testVideo(resourceName: "persons")
                }
                .buttonStyle(.borderedProminent)

                Button("–¢–µ—Å—Ç affirmation.mp4") {
                    testVideo(resourceName: "affirmation")
                }
                .buttonStyle(.borderedProminent)
            }

            if let player = player {
                VStack(alignment: .leading, spacing: 5) {
                    Text("–°—Ç–∞—Ç—É—Å –ø–ª–µ–µ—Ä–∞:")
                        .fontWeight(.bold)
                    Text("–ì–æ—Ç–æ–≤: \(isVideoReady ? "–î–∞" : "–ù–µ—Ç")")
                    Text("–°—Ç–∞—Ç—É—Å: \(player.currentItem?.status.rawValue ?? -1)")
                    Text("–í—Ä–µ–º—è: \(player.currentTime().seconds)")
                    Text("–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: \(player.currentItem?.duration.seconds ?? 0)")
                    Text("–í–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—Å—è: \(player.timeControlStatus == .playing ? "–î–∞" : "–ù–µ—Ç")")
                }
                .font(.caption)
                .padding()
                .background(Color.gray.opacity(0.2))
                .cornerRadius(8)
            }
        }
        .padding()
        .onAppear {
            // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Ç–µ—Å—Ç–∏—Ä—É–µ–º background.mp4 –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
            testVideo(resourceName: "background")
        }
    }

    private func testVideo(resourceName: String) {
        print("üß™ VideoTestView: –¢–µ—Å—Ç–∏—Ä—É–µ–º \(resourceName)")

        // –ü–æ–ª—É—á–∞–µ–º –ø–ª–µ–µ—Ä
        if let newPlayer = videoManager.player(resourceName: resourceName) {
            self.player = newPlayer
            setupPlayerObserver(newPlayer)
        } else {
            errorMessage = "–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –ø–ª–µ–µ—Ä –¥–ª—è \(resourceName)"
        }
    }

    private func setupPlayerObserver(_ player: AVPlayer) {
        let observer = player.currentItem?.observe(\.status, options: [.new]) { item, _ in
            DispatchQueue.main.async {
                print("üß™ VideoTestView: –°—Ç–∞—Ç—É—Å –ø–ª–µ–µ—Ä–∞: \(item.status.rawValue)")
                self.isVideoReady = item.status == .readyToPlay

                if item.status == .failed {
                    self.errorMessage =
                        "–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏: \(item.error?.localizedDescription ?? "–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞")"
                } else if item.status == .readyToPlay {
                    self.errorMessage = nil
                    // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –∑–∞–ø—É—Å–∫–∞–µ–º –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ
                    DispatchQueue.main.asyncAfter(deadline: .now() + 0.1) {
                        print("üß™ VideoTestView: –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –∑–∞–ø—É—Å–∫–∞–µ–º –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ")
                        player.play()
                    }
                }
            }
        }

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å
        if player.currentItem?.status == .readyToPlay {
            print("üß™ VideoTestView: –ü–ª–µ–µ—Ä —É–∂–µ –≥–æ—Ç–æ–≤")
            self.isVideoReady = true
            DispatchQueue.main.asyncAfter(deadline: .now() + 0.1) {
                print("üß™ VideoTestView: –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –∑–∞–ø—É—Å–∫–∞–µ–º –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ (—É–∂–µ –≥–æ—Ç–æ–≤)")
                player.play()
            }
        }
    }
}

#Preview {
    VideoTestView()
}
